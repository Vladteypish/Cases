import org.openqa.selenium.By;

public class AEGHome {
    public static final By Duchovie =
            By.cssSelector("a[href*=\"https://aeg-home.by/duhovye-shkafy\"]");
    public static final By El =
            By.cssSelector("a[href*=\"/duhovye-shkafy/elektricheskie\"]");
    public static final By Sparm =
            By.cssSelector("a[href*=\"/duhovye-shkafy/s-parom\"]");
    public static final By Var =
            By.cssSelector("a[href*=\"https://aeg-home.by/varochnye-paneli\"]");
    public static final By Plan =
            By.cssSelector("a[href*=\"/varochnye-paneli/elektricheskie\"]");
    public static final By Gazovie =
            By.cssSelector("a[href=\"/varochnye-paneli/gazovye\"]");
    public static final By PaneliInduct =
            By.cssSelector("a[href=\"/varochnye-paneli/indukcionnye\"]");
    public static final By Log =
            By.id("logo");
    public static final By Plit =
            By.cssSelector("a[href*=\"https://aeg-home.by/plity\"]");
    public static final By Comby =
            By.cssSelector("a[href*=\"/plity/plity-kombinirovannye\"]");
    public static final By Inducciya =
            By.cssSelector("a[href*=\"/plity/plity-elektricheskie-s-indukciey\"]");
    public static final By StekKer =
            By.cssSelector("a[href*=\"/plity/plity-elektricheskie-so-steklokeramikoy\"]");
    public static final By PosudMash =
            By.cssSelector("a[href*=\"https://aeg-home.by/posudomoechnye-mashiny\"]");
    public static final By Uzkie =
            By.cssSelector("a[href*=\"/posudomoechnye-mashiny/uzkie-posudomoechnye-mashiny\"]");
    public static final By PolnoG =
            By.cssSelector("a[href*=\"/posudomoechnye-mashiny/polnogabaritnye-posudomoechnye-mashiny\"]");
    public static final By Stiralki =
            By.cssSelector("a[href*=\"https://aeg-home.by/stiralnye-mashiny\"]");
    public static final By Frontalnie =
            By.cssSelector("a[href=\"/stiralnye-mashiny/stiralnye-mashiny-s-frontalnoy-zagruzkoy\"]");
    public static final By Vertical =
            By.cssSelector("a[href=\"/stiralnye-mashiny/stiralnye-mashiny-s-vertikalnoy-zagruzkoy\"]");
    public static final By Sushilnie =
            By.cssSelector("a[href*=\"https://aeg-home.by/stiralno-sushilnye-mashiny\"]");
    public static final By Front =
            By.cssSelector("a[href*=\"/stiralno-sushilnye-mashiny/stiralno-sushilnye-mashiny-s-frontalnoy-zagruzkoy\"]");
    public static final By Arrow =
            By.id("am-next");
    public static final By Sushki =
            By.cssSelector("a[href*=\"https://aeg-home.by/sushilnye-mashiny\"]");
    public static final By Vityazhki =
            By.cssSelector("a[href*=\"https://aeg-home.by/vytyazhki\"]");
    public static final By Pechi =
            By.cssSelector("a[href*=\"https://aeg-home.by/mikrovolnovye-pechi\"]");
    public static final By Holodilnik =
            By.cssSelector("a[href*=\"https://aeg-home.by/holodilniki/holodilniki-s-morozilnoy-kameroy\"]");
    public static final By Firmsalon =
            By.cssSelector("a[href*=\"/firmennyy-salon-bytovoy-tehniki-aeg\"]");
    public static final By Dostavka =
            By.cssSelector("a[href*=\"/dostavka-i-oplata\"]");
    public static final By OKompanii =
            By.cssSelector("a[href*=\"/o-kompanii\"]");
    public static final By Accii =
            By.cssSelector("a[href*=\"/stocks\"]");
    public static final By Obzori =
            By.cssSelector("a[href*=\"/info\"]");
    public static final By Warranty =
            By.cssSelector("a[href=\"/warranty\"]");
    public static final By Search =
            By.id("header-search");
    public static final By Tovar1 =
            By.cssSelector("a[href*=\"/duhovye-shkafy/ber455120m\"]");
    public static final By VKorzinu =
            By.id("edit-submit");
    public static final By Korzina =
            By.cssSelector("a[href*=\"/cart\"]");
    public static final By Oformlenie =
            By.id("edit-checkout");
    public static final By EMailField =
            By.id("edit-account-login-mail");
    public static final By NameField =
            By.id("edit-customer-profile-billing-field-billing-name-und-0-value");
    public static final By Telephone =
            By.id("edit-customer-profile-billing-field-billing-phone-und-0-value");
    public static final By City =
            By.id("edit-customer-profile-shipping-field-shipping-city-und-0-value");
    public static final By Street =
            By.id("edit-customer-profile-shipping-field-shipping-street-und-0-value");
    public static final By Number =
            By.id("edit-customer-profile-shipping-field-shipping-house-und-0-value");
    public static final By Flat =
            By.id("edit-customer-profile-shipping-field-shipping-apt-und-0-value");
    public static final By Comment =
            By.id("edit-customer-profile-billing-field-billing-comment-und-0-value");
    public static final By Prodolzhit =
            By.id("edit-continue");
    public static final By SearchField =
            By.xpath("//*[@id=\"header-search\"]/input");
    public static final By HolodilnikTest =
            By.cssSelector("a[href*=\"/holodilniki/rcb63826tx\"]");
    public static final By VityazhkaTest =
            By.cssSelector("a[href*=\"/vytyazhki/dce5980hm\"]");
    public static final By VarochnayaTest =
            By.cssSelector("a[href*=\"/varochnye-paneli/hkr64540nb\"]");
}


import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.util.concurrent.TimeUnit;


public class AEGNavigationChrome {
    WebDriver driver;

    @BeforeMethod
    public void setUP() {
        driver = new ChromeDriver();
        driver.get("https://aeg-home.by/");
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
    }
    @AfterMethod()
    public void TearDoun() {
       driver.close();
    }


    @Test
    public void checkTitleTest() throws InterruptedException {
        Assert.assertEquals(driver.getTitle(),
                "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω AEG \uD83C\uDF0D –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç AEG, –ë–µ–ª–∞—Ä—É—Å—å \uD83C\uDDE7\uD83C\uDDFE");
        WebElement DuchovieShkafi = driver.findElement(AEGHome.Duchovie);
        DuchovieShkafi.click();
        Assert.assertEquals(driver.getTitle(),
                "–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã AEG \uD83E\uDD67 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement ElShkafi = driver.findElement(AEGHome.El);
        ElShkafi.click();
        Assert.assertEquals(driver.getTitle(),
                "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã AEG ü•ß");
        driver.navigate().back();
        WebElement Sparom = driver.findElement(AEGHome.Sparm);
        Sparom.click();
        Assert.assertEquals(driver.getTitle(),
                "–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã —Å –ø–∞—Ä–æ–º AEG \uD83E\uDD67 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement VarPanel = driver.findElement(AEGHome.Var);
        VarPanel.click();
        Assert.assertEquals(driver.getTitle(),
                "\uD83C\uDF73–í–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG- —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
       // WebElement ElPan = driver.findElement(HomePage.Plan);
       // ElPan.click();
        //Assert.assertEquals(driver.getTitle(), "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –≤–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG \uD83C\uDF73 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        WebElement Gazovie = driver.findElement(AEGHome.Gazovie);
        Gazovie.click();
        Assert.assertEquals(driver.getTitle(),
                "–ì–∞–∑–æ–≤—ã–µ –≤–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG \uD83C\uDF73 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        driver.navigate().back();
        WebElement VarPaneliMenu = driver.findElement(AEGHome.PaneliInduct);
        VarPaneliMenu.click();
        Assert.assertEquals(driver.getTitle(),
                "–ò–Ω–¥—É–∫—Ü–∏–æ–Ω–Ω—ã–µ –≤–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG üç≥");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement Plity = driver.findElement(AEGHome.Plit);
        Plity.click();
        Assert.assertEquals(driver.getTitle(),
                "–ö—É—Ö–æ–Ω–Ω—ã–µ –ø–ª–∏—Ç—ã AEG \uD83C\uDF72 - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥");
        WebElement Combynirovanie = driver.findElement(AEGHome.Comby);
        Combynirovanie.click();
        Assert.assertEquals(driver.getTitle(),
                "–ü–ª–∏—Ç—ã –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement Sindukciey = driver.findElement(AEGHome.Inducciya);
        Sindukciey.click();
        Assert.assertEquals(driver.getTitle(),
                "–ü–ª–∏—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å –∏–Ω–¥—É–∫—Ü–∏–µ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement StekloKeramika = driver.findElement(AEGHome.StekKer);
        StekloKeramika.click();
        Assert.assertEquals(driver.getTitle(),
                "–ü–ª–∏—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å–æ —Å—Ç–µ–∫–ª–æ–∫–µ—Ä–∞–º–∏–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement Posudomoyki = driver.findElement(AEGHome.PosudMash);
        Posudomoyki.click();
        Assert.assertEquals(driver.getTitle(),
                "–ü–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - –∫—É–ø–∏—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ");
        WebElement Uzkie = driver.findElement(AEGHome.Uzkie);
        Uzkie.click();
        Assert.assertEquals(driver.getTitle(),
                "–£–∑–∫–∏–µ –ø–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement Polnogabarit = driver.findElement(AEGHome.PolnoG);
        Polnogabarit.click();
        Assert.assertEquals(driver.getTitle(),
                "–ü–æ–ª–Ω–æ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã–µ –ø–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement StiralMashin = driver.findElement(AEGHome.Stiralki);
        StiralMashin.click();
        Assert.assertEquals(driver.getTitle(),
                "–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - –∫—É–ø–∏—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ");
        WebElement Frontalnie = driver.findElement(AEGHome.Frontalnie);
        Frontalnie.click();
        Assert.assertEquals(driver.getTitle(),
                "–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement SVerticalnoyZ = driver.findElement(AEGHome.Vertical);
        SVerticalnoyZ.click();
        Assert.assertEquals(driver.getTitle(),
                "–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement Sushilnie = driver.findElement(AEGHome.Sushilnie);
        Sushilnie.click();
        Assert.assertEquals(driver.getTitle(),
                "–°—Ç–∏—Ä–∞–ª—å–Ω–æ-—Å—É—à–∏–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement Frontlnie = driver.findElement(AEGHome.Front);
        Frontlnie.click();
        Assert.assertEquals(driver.getTitle(),
                "–°—Ç–∏—Ä–∞–ª—å–Ω–æ-—Å—É—à–∏–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        WebElement Sushki = driver.findElement(AEGHome.Sushki);
        Sushki.click();
        Assert.assertEquals(driver.getTitle(),
                "–°—É—à–∏–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        ArrowAhead.click();
        WebElement Vityazhki = driver.findElement(AEGHome.Vityazhki);
        Vityazhki.click();
        Assert.assertEquals(driver.getTitle(),
                "–ö—É—Ö–æ–Ω–Ω—ã–µ –≤—ã—Ç—è–∂–∫–∏ AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        ArrowAhead.click();
        ArrowAhead.click();
        WebElement Pechi = driver.findElement(AEGHome.Pechi);
        Pechi.click();
        Assert.assertEquals(driver.getTitle(),
                "–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤—ã–µ –ø–µ—á–∏ AEG \uD83C\uDF72 - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        ArrowAhead.click();
        ArrowAhead.click();
        ArrowAhead.click();
        WebElement Holodilnik = driver.findElement(AEGHome.Holodilnik);
        Holodilnik.click();
        Assert.assertEquals(driver.getTitle(),
                "–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏ —Å –º–æ—Ä–æ–∑–∏–ª—å–Ω–æ–π –∫–∞–º–µ—Ä–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement FirmSalon = driver.findElement(AEGHome.Firmsalon);
        FirmSalon.click();
        Assert.assertEquals(driver.getTitle(),
                "–§–∏—Ä–º–µ–Ω–Ω—ã–π —Å–∞–ª–æ–Ω –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ AEG | AEG");
        WebElement Dostavka = driver.findElement(AEGHome.Dostavka);
        Dostavka.click();
        Assert.assertEquals(driver.getTitle(),
                "–î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞ | AEG");
        WebElement OKompanii = driver.findElement(AEGHome.OKompanii);
        OKompanii.click();
        Assert.assertEquals(driver.getTitle(),
                "–û –∫–æ–º–ø–∞–Ω–∏–∏ | AEG");
        WebElement Accii = driver.findElement(AEGHome.Accii);
        Accii.click();
        Assert.assertEquals(driver.getTitle(),
                "–ê–∫—Ü–∏–∏ | AEG");
        WebElement Obzori = driver.findElement(AEGHome.Obzori);
        Obzori.click();
        Assert.assertEquals(driver.getTitle(),
                "–û–±–∑–æ—Ä—ã –∏ —Å—Ç–∞—Ç—å–∏ | AEG");
        WebElement Warranty = driver.findElement(AEGHome.Warranty);
        Warranty.click();
        Assert.assertEquals(driver.getTitle(),
                "–ì–∞—Ä–∞–Ω—Ç–∏—è | AEG");


    }
    @Test
    public void BuscketTest() throws InterruptedException {
        Assert.assertEquals(driver.getTitle(),
                "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω AEG \uD83C\uDF0D –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç AEG, –ë–µ–ª–∞—Ä—É—Å—å \uD83C\uDDE7\uD83C\uDDFE");
        WebElement DuchovieShkafi = driver.findElement(AEGHome.Duchovie);
        DuchovieShkafi.click();
        Assert.assertEquals(driver.getTitle(),
                "–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã AEG \uD83E\uDD67 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement Tovar = driver.findElement(AEGHome.Tovar1);
        Tovar.click();
        Assert.assertEquals(driver.getTitle(),
                "BER455120M –î—É—Ö–æ–≤–æ–π —à–∫–∞—Ñ –∑–∞ 1,470.00 —Ä—É–±.");
        WebElement VKorzinu = driver.findElement(AEGHome.VKorzinu);
        VKorzinu.click();
        WebElement Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(5000);
        WebElement Korzina = driver.findElement(AEGHome.Korzina);
        Korzina.click();
        Assert.assertEquals(driver.getTitle(),
                "–ö–æ—Ä–∑–∏–Ω–∞ | AEG");
        WebElement OformitZakaz = driver.findElement(AEGHome.Oformlenie);
        OformitZakaz.click();
        WebElement EMailField = driver.findElement(AEGHome.EMailField);
        EMailField.click();
        EMailField.sendKeys("test@mail.ru");
        WebElement NameField = driver.findElement(AEGHome.NameField);
        NameField.click();
        NameField.sendKeys("test name");
        WebElement Telephone = driver.findElement(AEGHome.Telephone);
        Telephone.click();
        Telephone.sendKeys("299999999");
        WebElement City = driver.findElement(AEGHome.City);
        City.click();
        City.sendKeys("Test city");
        WebElement Street = driver.findElement(AEGHome.Street);
        Street.click();
        Street.sendKeys("test street");
        WebElement Number = driver.findElement(AEGHome.Number);
        Number.click();
        Number.sendKeys("123");
        WebElement Flat = driver.findElement(AEGHome.Flat);
        Flat.click();
        Flat.sendKeys("12");
        WebElement Comment = driver.findElement(AEGHome.Comment);
        Comment.click();
        Comment.sendKeys("test test 123 test 1234 test");
        WebElement Prodolzhit = driver.findElement(AEGHome.Prodolzhit);
        Prodolzhit.click();
        Assert.assertEquals(driver.getTitle(),
                "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞ | AEG");
        Korzina = driver.findElement(AEGHome.Korzina);
        Korzina.click();

    }
    @Test
    public void SearchTest() throws InterruptedException {
        Assert.assertEquals(driver.getTitle(),
                "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω AEG \uD83C\uDF0D –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç AEG, –ë–µ–ª–∞—Ä—É—Å—å \uD83C\uDDE7\uD83C\uDDFE");
        WebElement SearchField = driver.findElement(AEGHome.SearchField);
        SearchField.sendKeys("—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫");
        Thread.sleep(1000);
        WebElement HolodilnikTest = driver.findElement(AEGHome.HolodilnikTest);
        HolodilnikTest.click();
        Assert.assertEquals(driver.getTitle(),
                "RCB63826TX —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –∑–∞ 3,200.00 —Ä—É–±.");
        SearchField = driver.findElement(AEGHome.SearchField);
        SearchField.sendKeys("–≤—ã—Ç—è–∂–∫–∞");
        Thread.sleep(1000);
        WebElement VityzkaTest = driver.findElement(AEGHome.VityazhkaTest);
        VityzkaTest.click();
        Assert.assertEquals(driver.getTitle(),
                "DCE5980HM –≤—ã—Ç—è–∂–∫–∞ –∑–∞ 2,630.00 —Ä—É–±.");
        SearchField = driver.findElement(AEGHome.SearchField);
        SearchField.sendKeys("–≤–∞—Ä–æ—á–Ω–∞—è");
        Thread.sleep(1000);
        WebElement VarochnayaTest = driver.findElement(AEGHome.VarochnayaTest);
        VarochnayaTest.click();
        Assert.assertEquals(driver.getTitle(),
                "HKR64540NB –≤–∞—Ä–æ—á–Ω–∞—è –ø–∞–Ω–µ–ª—å –∑–∞ 1,130.00 —Ä—É–±.");

    }
}


import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.edge.EdgeDriver;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.util.concurrent.TimeUnit;


public class AEGNavigationEdge {
    WebDriver driver;

    @BeforeMethod
    public void setUP() {
        driver = new EdgeDriver();
        driver.get("https://aeg-home.by/");
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
    }
    @AfterMethod()
    public void TearDoun() {
        //driver.close();
    }


    @Test
    public void checkTitleTest() throws InterruptedException {
        Assert.assertEquals(driver.getTitle(), "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω AEG \uD83C\uDF0D –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç AEG, –ë–µ–ª–∞—Ä—É—Å—å \uD83C\uDDE7\uD83C\uDDFE");
        WebElement DuchovieShkafi = driver.findElement(AEGHome.Duchovie);
        DuchovieShkafi.click();
        Thread.sleep(6000);
        Assert.assertEquals(driver.getTitle(), "–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã AEG \uD83E\uDD67 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement ElShkafi = driver.findElement(AEGHome.El);
        ElShkafi.click();
        Thread.sleep(6000);
        Assert.assertEquals(driver.getTitle(), "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã AEG ü•ß");
        driver.navigate().back();
        WebElement Sparom = driver.findElement(AEGHome.Sparm);
        Sparom.click();
        Thread.sleep(6000);
        Assert.assertEquals(driver.getTitle(), "–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã —Å –ø–∞—Ä–æ–º AEG \uD83E\uDD67 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(2000);
        WebElement VarPanel = driver.findElement(AEGHome.Var);
        VarPanel.click();
        Thread.sleep(6000);
        Assert.assertEquals(driver.getTitle(), "\uD83C\uDF73–í–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG- —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        // WebElement ElPan = driver.findElement(HomePage.Plan);
        // ElPan.click();
        //Assert.assertEquals(driver.getTitle(), "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –≤–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG \uD83C\uDF73 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        WebElement Gazovie = driver.findElement(AEGHome.Gazovie);
        Gazovie.click();
        Thread.sleep(6000);
        Assert.assertEquals(driver.getTitle(), "–ì–∞–∑–æ–≤—ã–µ –≤–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG \uD83C\uDF73 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        driver.navigate().back();
        WebElement VarPaneliMenu = driver.findElement(AEGHome.PaneliInduct);
        VarPaneliMenu.click();
        Thread.sleep(6000);
        Assert.assertEquals(driver.getTitle(), "–ò–Ω–¥—É–∫—Ü–∏–æ–Ω–Ω—ã–µ –≤–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG üç≥");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(1000);
        WebElement Plity = driver.findElement(AEGHome.Plit);
        Plity.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(), "–ö—É—Ö–æ–Ω–Ω—ã–µ –ø–ª–∏—Ç—ã AEG \uD83C\uDF72 - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥");
        WebElement Combynirovanie = driver.findElement(AEGHome.Comby);
        Combynirovanie.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(), "–ü–ª–∏—Ç—ã –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement Sindukciey = driver.findElement(AEGHome.Inducciya);
        Sindukciey.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(), "–ü–ª–∏—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å –∏–Ω–¥—É–∫—Ü–∏–µ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement StekloKeramika = driver.findElement(AEGHome.StekKer);
        StekloKeramika.click();
        Thread.sleep(2000);
        Assert.assertEquals(driver.getTitle(),"–ü–ª–∏—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å–æ —Å—Ç–µ–∫–ª–æ–∫–µ—Ä–∞–º–∏–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(1000);
        WebElement Posudomoyki = driver.findElement(AEGHome.PosudMash);
        Posudomoyki.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–ü–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - –∫—É–ø–∏—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ");
        WebElement Uzkie = driver.findElement(AEGHome.Uzkie);
        Uzkie.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–£–∑–∫–∏–µ –ø–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement Polnogabarit = driver.findElement(AEGHome.PolnoG);
        Polnogabarit.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–ü–æ–ª–Ω–æ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã–µ –ø–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(1000);
        WebElement StiralMashin = driver.findElement(AEGHome.Stiralki);
        StiralMashin.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - –∫—É–ø–∏—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ");
        WebElement Frontalnie = driver.findElement(AEGHome.Frontalnie);
        Frontalnie.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement SVerticalnoyZ = driver.findElement(AEGHome.Vertical);
        SVerticalnoyZ.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(1000);
        WebElement Sushilnie = driver.findElement(AEGHome.Sushilnie);
        Sushilnie.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–°—Ç–∏—Ä–∞–ª—å–Ω–æ-—Å—É—à–∏–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement Frontlnie = driver.findElement(AEGHome.Front);
        Frontlnie.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–°—Ç–∏—Ä–∞–ª—å–Ω–æ-—Å—É—à–∏–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(1000);
        WebElement ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        WebElement Sushki = driver.findElement(AEGHome.Sushki);
        Sushki.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–°—É—à–∏–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(1000);
        ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        ArrowAhead.click();
        WebElement Vityazhki = driver.findElement(AEGHome.Vityazhki);
        Vityazhki.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–ö—É—Ö–æ–Ω–Ω—ã–µ –≤—ã—Ç—è–∂–∫–∏ AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(1000);
        ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        ArrowAhead.click();
        ArrowAhead.click();
        WebElement Pechi = driver.findElement(AEGHome.Pechi);
        Pechi.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤—ã–µ –ø–µ—á–∏ AEG \uD83C\uDF72 - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(1000);
        ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        ArrowAhead.click();
        ArrowAhead.click();
        ArrowAhead.click();
        WebElement Holodilnik = driver.findElement(AEGHome.Holodilnik);
        Holodilnik.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏ —Å –º–æ—Ä–æ–∑–∏–ª—å–Ω–æ–π –∫–∞–º–µ—Ä–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(1000);
        WebElement FirmSalon = driver.findElement(AEGHome.Firmsalon);
        FirmSalon.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–§–∏—Ä–º–µ–Ω–Ω—ã–π —Å–∞–ª–æ–Ω –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ AEG | AEG");
        WebElement Dostavka = driver.findElement(AEGHome.Dostavka);
        Dostavka.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞ | AEG");
        WebElement OKompanii = driver.findElement(AEGHome.OKompanii);
        OKompanii.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–û –∫–æ–º–ø–∞–Ω–∏–∏ | AEG");
        WebElement Accii = driver.findElement(AEGHome.Accii);
        Accii.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–ê–∫—Ü–∏–∏ | AEG");
        WebElement Obzori = driver.findElement(AEGHome.Obzori);
        Obzori.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–û–±–∑–æ—Ä—ã –∏ —Å—Ç–∞—Ç—å–∏ | AEG");
        WebElement Warranty = driver.findElement(AEGHome.Warranty);
        Warranty.click();
        Thread.sleep(1000);
        Assert.assertEquals(driver.getTitle(),"–ì–∞—Ä–∞–Ω—Ç–∏—è | AEG");

    }

    @Test
    public void BuscketTest() throws InterruptedException {
        Assert.assertEquals(driver.getTitle(), "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω AEG \uD83C\uDF0D –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç AEG, –ë–µ–ª–∞—Ä—É—Å—å \uD83C\uDDE7\uD83C\uDDFE");
        WebElement DuchovieShkafi = driver.findElement(AEGHome.Duchovie);
        DuchovieShkafi.click();
        Thread.sleep(5000);
        Assert.assertEquals(driver.getTitle(), "–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã AEG \uD83E\uDD67 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement Tovar = driver.findElement(AEGHome.Tovar1);
        Tovar.click();
        Thread.sleep(10000);
        Assert.assertEquals(driver.getTitle(), "BER455120M –î—É—Ö–æ–≤–æ–π —à–∫–∞—Ñ –∑–∞ 1,470.00 —Ä—É–±.");
        WebElement VKorzinu = driver.findElement(AEGHome.VKorzinu);
        VKorzinu.click();
        WebElement Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(5000);
        WebElement Korzina = driver.findElement(AEGHome.Korzina);
        Korzina.click();
        Thread.sleep(5000);
        Assert.assertEquals(driver.getTitle(), "–ö–æ—Ä–∑–∏–Ω–∞ | AEG");
        WebElement OformitZakaz = driver.findElement(AEGHome.Oformlenie);
        OformitZakaz.click();
        Thread.sleep(3000);
        WebElement EMailField = driver.findElement(AEGHome.EMailField);
        EMailField.click();
        EMailField.sendKeys("test@mail.ru");
        WebElement NameField = driver.findElement(AEGHome.NameField);
        NameField.click();
        NameField.sendKeys("test name");
        WebElement Telephone = driver.findElement(AEGHome.Telephone);
        Telephone.click();
        Telephone.sendKeys("299999999");
        WebElement City = driver.findElement(AEGHome.City);
        City.click();
        City.sendKeys("Test city");
        WebElement Street = driver.findElement(AEGHome.Street);
        Street.click();
        Street.sendKeys("test street");
        WebElement Number = driver.findElement(AEGHome.Number);
        Number.click();
        Number.sendKeys("123");
        WebElement Flat = driver.findElement(AEGHome.Flat);
        Flat.click();
        Flat.sendKeys("12");
        WebElement Comment = driver.findElement(AEGHome.Comment);
        Comment.click();
        Comment.sendKeys("test test 123 test 1234 test");
        Thread.sleep(1000);
        WebElement Prodolzhit = driver.findElement(AEGHome.Prodolzhit);
        Prodolzhit.click();
        Thread.sleep(10000);
        Assert.assertEquals(driver.getTitle(),"–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞ | AEG");
        Korzina = driver.findElement(AEGHome.Korzina);
        Korzina.click();

    }
    @Test
    public void SearchTest() throws InterruptedException {
        Assert.assertEquals(driver.getTitle(), "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω AEG \uD83C\uDF0D –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç AEG, –ë–µ–ª–∞—Ä—É—Å—å \uD83C\uDDE7\uD83C\uDDFE");
        WebElement SearchField = driver.findElement(AEGHome.SearchField);
        SearchField.sendKeys("—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫");
        Thread.sleep(1000);
        WebElement HolodilnikTest = driver.findElement(AEGHome.HolodilnikTest);
        HolodilnikTest.click();
        Thread.sleep(5000);
        Assert.assertEquals(driver.getTitle(),"RCB63826TX —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –∑–∞ 3,200.00 —Ä—É–±.");
        SearchField = driver.findElement(AEGHome.SearchField);
        SearchField.sendKeys("–≤—ã—Ç—è–∂–∫–∞");
        Thread.sleep(1000);
        WebElement VityzkaTest = driver.findElement(AEGHome.VityazhkaTest);
        VityzkaTest.click();
        Thread.sleep(5000);
        Assert.assertEquals(driver.getTitle(),"DCE5980HM –≤—ã—Ç—è–∂–∫–∞ –∑–∞ 2,630.00 —Ä—É–±.");
        SearchField = driver.findElement(AEGHome.SearchField);
        SearchField.sendKeys("–≤–∞—Ä–æ—á–Ω–∞—è");
        Thread.sleep(1000);
        WebElement VarochnayaTest = driver.findElement(AEGHome.VarochnayaTest);
        VarochnayaTest.click();
        Thread.sleep(5000);
        Assert.assertEquals(driver.getTitle(),"HKR64540NB –≤–∞—Ä–æ—á–Ω–∞—è –ø–∞–Ω–µ–ª—å –∑–∞ 1,099.00 —Ä—É–±.");

    }
}


import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.util.concurrent.TimeUnit;


public class AEGNavigationFirefox {
    WebDriver driver;

    @BeforeMethod
    public void setUP() {
        driver = new FirefoxDriver();
        driver.get("https://aeg-home.by/");
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
    }
    @AfterMethod()
    public void TearDoun() {
         driver.close();
    }


    @Test
    public void checkTitleTest() throws InterruptedException {
        Assert.assertEquals(driver.getTitle(), "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω AEG \uD83C\uDF0D –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç AEG, –ë–µ–ª–∞—Ä—É—Å—å \uD83C\uDDE7\uD83C\uDDFE");
        WebElement DuchovieShkafi = driver.findElement(AEGHome.Duchovie);
        DuchovieShkafi.click();
        Assert.assertEquals(driver.getTitle(), "–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã AEG \uD83E\uDD67 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement ElShkafi = driver.findElement(AEGHome.El);
        ElShkafi.click();
        Assert.assertEquals(driver.getTitle(), "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã AEG ü•ß");
        driver.navigate().back();
        WebElement Sparom = driver.findElement(AEGHome.Sparm);
        Sparom.click();
        Assert.assertEquals(driver.getTitle(), "–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã —Å –ø–∞—Ä–æ–º AEG \uD83E\uDD67 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement VarPanel = driver.findElement(AEGHome.Var);
        VarPanel.click();
        Assert.assertEquals(driver.getTitle(), "\uD83C\uDF73–í–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG- —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        // WebElement ElPan = driver.findElement(HomePage.Plan);
        // ElPan.click();
        //Assert.assertEquals(driver.getTitle(), "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –≤–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG \uD83C\uDF73 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        WebElement Gazovie = driver.findElement(AEGHome.Gazovie);
        Gazovie.click();
        Assert.assertEquals(driver.getTitle(), "–ì–∞–∑–æ–≤—ã–µ –≤–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG \uD83C\uDF73 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        driver.navigate().back();
        WebElement VarPaneliMenu = driver.findElement(AEGHome.PaneliInduct);
        VarPaneliMenu.click();
        Assert.assertEquals(driver.getTitle(), "–ò–Ω–¥—É–∫—Ü–∏–æ–Ω–Ω—ã–µ –≤–∞—Ä–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ AEG üç≥");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement Plity = driver.findElement(AEGHome.Plit);
        Plity.click();
        Assert.assertEquals(driver.getTitle(), "–ö—É—Ö–æ–Ω–Ω—ã–µ –ø–ª–∏—Ç—ã AEG \uD83C\uDF72 - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥");
        WebElement Combynirovanie = driver.findElement(AEGHome.Comby);
        Combynirovanie.click();
        Assert.assertEquals(driver.getTitle(), "–ü–ª–∏—Ç—ã –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement Sindukciey = driver.findElement(AEGHome.Inducciya);
        Sindukciey.click();
        Assert.assertEquals(driver.getTitle(), "–ü–ª–∏—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å –∏–Ω–¥—É–∫—Ü–∏–µ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement StekloKeramika = driver.findElement(AEGHome.StekKer);
        StekloKeramika.click();
        Assert.assertEquals(driver.getTitle(),"–ü–ª–∏—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å–æ —Å—Ç–µ–∫–ª–æ–∫–µ—Ä–∞–º–∏–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement Posudomoyki = driver.findElement(AEGHome.PosudMash);
        Posudomoyki.click();
        Assert.assertEquals(driver.getTitle(),"–ü–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - –∫—É–ø–∏—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ");
        WebElement Uzkie = driver.findElement(AEGHome.Uzkie);
        Uzkie.click();
        Assert.assertEquals(driver.getTitle(),"–£–∑–∫–∏–µ –ø–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement Polnogabarit = driver.findElement(AEGHome.PolnoG);
        Polnogabarit.click();
        Assert.assertEquals(driver.getTitle(),"–ü–æ–ª–Ω–æ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã–µ –ø–æ—Å—É–¥–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement StiralMashin = driver.findElement(AEGHome.Stiralki);
        StiralMashin.click();
        Assert.assertEquals(driver.getTitle(),"–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - –∫—É–ø–∏—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ");
        WebElement Frontalnie = driver.findElement(AEGHome.Frontalnie);
        Frontalnie.click();
        Assert.assertEquals(driver.getTitle(),"–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        driver.navigate().back();
        WebElement SVerticalnoyZ = driver.findElement(AEGHome.Vertical);
        SVerticalnoyZ.click();
        Assert.assertEquals(driver.getTitle(),"–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement Sushilnie = driver.findElement(AEGHome.Sushilnie);
        Sushilnie.click();
        Assert.assertEquals(driver.getTitle(),"–°—Ç–∏—Ä–∞–ª—å–Ω–æ-—Å—É—à–∏–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement Frontlnie = driver.findElement(AEGHome.Front);
        Frontlnie.click();
        Assert.assertEquals(driver.getTitle(),"–°—Ç–∏—Ä–∞–ª—å–Ω–æ-—Å—É—à–∏–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã —Å —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        WebElement Sushki = driver.findElement(AEGHome.Sushki);
        Sushki.click();
        Assert.assertEquals(driver.getTitle(),"–°—É—à–∏–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        ArrowAhead.click();
        WebElement Vityazhki = driver.findElement(AEGHome.Vityazhki);
        Vityazhki.click();
        Assert.assertEquals(driver.getTitle(),"–ö—É—Ö–æ–Ω–Ω—ã–µ –≤—ã—Ç—è–∂–∫–∏ AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        ArrowAhead.click();
        ArrowAhead.click();
        WebElement Pechi = driver.findElement(AEGHome.Pechi);
        Pechi.click();
        Assert.assertEquals(driver.getTitle(),"–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤—ã–µ –ø–µ—á–∏ AEG \uD83C\uDF72 - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        ArrowAhead = driver.findElement(AEGHome.Arrow);
        ArrowAhead.click();
        ArrowAhead.click();
        ArrowAhead.click();
        ArrowAhead.click();
        WebElement Holodilnik = driver.findElement(AEGHome.Holodilnik);
        Holodilnik.click();
        Assert.assertEquals(driver.getTitle(),"–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏ —Å –º–æ—Ä–æ–∑–∏–ª—å–Ω–æ–π –∫–∞–º–µ—Ä–æ–π AEG - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ");
        Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        WebElement FirmSalon = driver.findElement(AEGHome.Firmsalon);
        FirmSalon.click();
        Assert.assertEquals(driver.getTitle(),"–§–∏—Ä–º–µ–Ω–Ω—ã–π —Å–∞–ª–æ–Ω –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ AEG | AEG");
        WebElement Dostavka = driver.findElement(AEGHome.Dostavka);
        Dostavka.click();
        Assert.assertEquals(driver.getTitle(),"–î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞ | AEG");
        WebElement OKompanii = driver.findElement(AEGHome.OKompanii);
        OKompanii.click();
        Assert.assertEquals(driver.getTitle(),"–û –∫–æ–º–ø–∞–Ω–∏–∏ | AEG");
        WebElement Accii = driver.findElement(AEGHome.Accii);
        Accii.click();
        Assert.assertEquals(driver.getTitle(),"–ê–∫—Ü–∏–∏ | AEG");
        WebElement Obzori = driver.findElement(AEGHome.Obzori);
        Obzori.click();
        Assert.assertEquals(driver.getTitle(),"–û–±–∑–æ—Ä—ã –∏ —Å—Ç–∞—Ç—å–∏ | AEG");
        WebElement Warranty = driver.findElement(AEGHome.Warranty);
        Warranty.click();
        Assert.assertEquals(driver.getTitle(),"–ì–∞—Ä–∞–Ω—Ç–∏—è | AEG");

    }

    @Test
    public void BuscketTest() throws InterruptedException {
        Assert.assertEquals(driver.getTitle(), "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω AEG \uD83C\uDF0D –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç AEG, –ë–µ–ª–∞—Ä—É—Å—å \uD83C\uDDE7\uD83C\uDDFE");
        WebElement DuchovieShkafi = driver.findElement(AEGHome.Duchovie);
        DuchovieShkafi.click();
        Assert.assertEquals(driver.getTitle(), "–î—É—Ö–æ–≤—ã–µ —à–∫–∞—Ñ—ã AEG \uD83E\uDD67 - —Ü–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ AEG");
        WebElement Tovar = driver.findElement(AEGHome.Tovar1);
        Tovar.click();
        Assert.assertEquals(driver.getTitle(), "BER455120M –î—É—Ö–æ–≤–æ–π —à–∫–∞—Ñ –∑–∞ 1,470.00 —Ä—É–±.");
        WebElement VKorzinu = driver.findElement(AEGHome.VKorzinu);
        VKorzinu.click();
        WebElement Logo = driver.findElement(AEGHome.Log);
        Logo.click();
        Thread.sleep(5000);
        WebElement Korzina = driver.findElement(AEGHome.Korzina);
        Korzina.click();
        Assert.assertEquals(driver.getTitle(), "–ö–æ—Ä–∑–∏–Ω–∞ | AEG");
        WebElement OformitZakaz = driver.findElement(AEGHome.Oformlenie);
        OformitZakaz.click();
        WebElement EMailField = driver.findElement(AEGHome.EMailField);
        EMailField.click();
        EMailField.sendKeys("test@mail.ru");
        WebElement NameField = driver.findElement(AEGHome.NameField);
        NameField.click();
        NameField.sendKeys("test name");
        WebElement Telephone = driver.findElement(AEGHome.Telephone);
        Telephone.click();
        Telephone.sendKeys("299999999");
        WebElement City = driver.findElement(AEGHome.City);
        City.click();
        City.sendKeys("Test city");
        WebElement Street = driver.findElement(AEGHome.Street);
        Street.click();
        Street.sendKeys("test street");
        WebElement Number = driver.findElement(AEGHome.Number);
        Number.click();
        Number.sendKeys("123");
        WebElement Flat = driver.findElement(AEGHome.Flat);
        Flat.click();
        Flat.sendKeys("12");
        WebElement Comment = driver.findElement(AEGHome.Comment);
        Comment.click();
        Comment.sendKeys("test test 123 test 1234 test");
        WebElement Prodolzhit = driver.findElement(AEGHome.Prodolzhit);
        Prodolzhit.click();
        Assert.assertEquals(driver.getTitle(),"–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞ | AEG");
        Korzina = driver.findElement(AEGHome.Korzina);
        Korzina.click();

    }
    @Test
    public void SearchTest() throws InterruptedException {
        Assert.assertEquals(driver.getTitle(), "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω AEG \uD83C\uDF0D –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç AEG, –ë–µ–ª–∞—Ä—É—Å—å \uD83C\uDDE7\uD83C\uDDFE");
        WebElement SearchField = driver.findElement(AEGHome.SearchField);
        SearchField.sendKeys("—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫");
        Thread.sleep(1000);
        WebElement HolodilnikTest = driver.findElement(AEGHome.HolodilnikTest);
        HolodilnikTest.click();
        Assert.assertEquals(driver.getTitle(),"RCB63826TX —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –∑–∞ 3,200.00 —Ä—É–±.");
        SearchField = driver.findElement(AEGHome.SearchField);
        SearchField.sendKeys("–≤—ã—Ç—è–∂–∫–∞");
        Thread.sleep(1000);
        WebElement VityzkaTest = driver.findElement(AEGHome.VityazhkaTest);
        VityzkaTest.click();
        Assert.assertEquals(driver.getTitle(),"DCE5980HM –≤—ã—Ç—è–∂–∫–∞ –∑–∞ 2,630.00 —Ä—É–±.");
        SearchField = driver.findElement(AEGHome.SearchField);
        SearchField.sendKeys("–≤–∞—Ä–æ—á–Ω–∞—è");
        Thread.sleep(1000);
        WebElement VarochnayaTest = driver.findElement(AEGHome.VarochnayaTest);
        VarochnayaTest.click();
        Assert.assertEquals(driver.getTitle(),"HKR64540NB –≤–∞—Ä–æ—á–Ω–∞—è –ø–∞–Ω–µ–ª—å –∑–∞ 1,099.00 —Ä—É–±.");

    }
}
